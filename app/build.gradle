/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '6.5.2.Final'
    implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.2.0'

    implementation group: 'org.hibernate', name: 'hibernate-entitymanager', version: '6.0.0.Alpha7', ext: 'pom'
    implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '12.6.3.jre11'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.1.0-alpha1'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.1.0-alpha1'
    implementation group: 'com.google.inject', name: 'guice', version: '7.0.0'

}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.2')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}
